<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="3" total="6" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="SmokeTests" duration-ms="17741" started-at="2023-04-24T21:04:10 IST" finished-at="2023-04-24T21:04:28 IST">
    <groups>
    </groups>
    <test name="Test1" duration-ms="6692" started-at="2023-04-24T21:04:10 IST" finished-at="2023-04-24T21:04:17 IST">
      <class name="tests.LoginTest">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:tests.LoginTest@3044e9c7]" name="setUp" is-config="true" duration-ms="4780" started-at="2023-04-24T21:04:10 IST" finished-at="2023-04-24T21:04:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyValidLogin(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@3044e9c7]" name="verifyValidLogin" duration-ms="627" started-at="2023-04-24T21:04:15 IST" data-provider="getValidLoginData" finished-at="2023-04-24T21:04:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidLogin -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.LoginTest@3044e9c7]" name="tearDown" is-config="true" duration-ms="679" started-at="2023-04-24T21:04:16 IST" finished-at="2023-04-24T21:04:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginTest -->
    </test> <!-- Test1 -->
    <test name="Test2" duration-ms="11016" started-at="2023-04-24T21:04:17 IST" finished-at="2023-04-24T21:04:28 IST">
      <class name="tests.LoginTest">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:tests.LoginTest@720653c2]" name="setUp" is-config="true" duration-ms="3733" started-at="2023-04-24T21:04:17 IST" finished-at="2023-04-24T21:04:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="verifyInValidLogin(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@720653c2]" name="verifyInValidLogin" duration-ms="534" started-at="2023-04-24T21:04:20 IST" data-provider="getInvalidLoginData" finished-at="2023-04-24T21:04:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce123]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://www.saucedemo.com/inventory.html] but found [https://www.saucedemo.com/]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://www.saucedemo.com/inventory.html] but found [https://www.saucedemo.com/]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at pages.LoginPage.login(LoginPage.java:41)
at tests.LoginTest.verifyInValidLogin(LoginTest.java:73)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInValidLogin -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.LoginTest@720653c2]" name="tearDown" is-config="true" duration-ms="745" started-at="2023-04-24T21:04:21 IST" finished-at="2023-04-24T21:04:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:tests.LoginTest@720653c2]" name="setUp" is-config="true" duration-ms="3564" started-at="2023-04-24T21:04:22 IST" finished-at="2023-04-24T21:04:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyValidLoginLogout(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@720653c2]" name="verifyValidLoginLogout" duration-ms="1400" started-at="2023-04-24T21:04:25 IST" data-provider="getValidLoginData" finished-at="2023-04-24T21:04:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidLoginLogout -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.LoginTest@720653c2]" name="tearDown" is-config="true" duration-ms="723" started-at="2023-04-24T21:04:27 IST" finished-at="2023-04-24T21:04:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginTest -->
    </test> <!-- Test2 -->
  </suite> <!-- SmokeTests -->
</testng-results>
